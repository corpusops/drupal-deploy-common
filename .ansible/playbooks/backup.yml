# BACKUP
- hosts: "{{drupal_servers|default('all')}}"
  roles: [corpusops.roles/ansible_plugins]
  tasks:
  - when: ["cops_drupal_lifecycle_prebackup|default(true)"]
    tags: ["cops_drupal_lifecycle_prebackup"]
    block:
    - include_role: {name: drupal_vars, allow_duplicates: false, public: true}
  - block:
    - set_fact:
        cops_project_backup_postgresql: "{{cops_drupal_backup_postgresql}}"
    - name: test if we have a previous deployment to know if we have to backup
      shell: |-
        set -e
        test -e "{{cops_drupal_dir}}/.env"
        cd "{{cops_drupal_dir}}"
        {% if cops_drupal_db_driver.startswith('pg') %}
        ./control.sh dcompose run --rm --entrypoint bash db -c 'echo select 1|psql -v ON_ERROR_STOP=1 $PSQL_URI'
        {% endif %}
      register: backuphastobedonetest
      failed_when: False
      changed_when: False
    - set_fact:
        cacheable: false
        backuphastobedone: "{{skip_backup|default(backuphastobedonetest.rc==0)}}"
    - include_role: {name: "corpusops.roles/project_backup", public: false}
      when: backuphastobedone
    vars:
      cops_project_backup_postgresql: "{{cops_drupal_backup_postgresql}}"
      cops_project_backup_paths_to_backup: "{{cops_drupal_backup_paths_to_backup}}"
      cops_project_backup_docker_volumes: "{{cops_drupal_backup_docker_volumes_}}"
      cops_project_backup_pgdump_urls: "{{cops_drupal_backup_pgdump_urls}}"
      cops_project_backup_dir: "{{cops_project_backups_dir}}/{{cops_drupal_db_name}}"
